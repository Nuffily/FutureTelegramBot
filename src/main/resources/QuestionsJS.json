
[

  {
    "body": "Что выведет этот код?\n// JavaScript Equalto Operators\nfunction equalto() {\n    let num=10;\n    if(num===\"10\")\n        return true;\n    else\n        return false;\n}",
    "answers": [
      "false",
      "true",
      "compilation error",
      "runtime error"
    ],
    "number": 1,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Используется строгое сравнение (===), которое проверяет и значение, и тип данных. Число 10 не равно строке '10', поэтому результат false."
  },

  {
    "body": "Что выведет этот код?\n// Javascript code snippet to compare the height\nfunction height() {\n    var height = 123.56;\n    var type = (height>=190) ? \"tall\" : \"short\";\n    return type;\n}",
    "answers": [
      "short",
      "123.56",
      "tall",
      "190"
    ],
    "number": 2,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Значение переменной height — 123.56, которое меньше 190, поэтому результат будет 'short'."
  },

  {
    "body": "Что выведет этот код?\nprint(typeof(NaN));",
    "answers": [
      "object",
      "number",
      "string",
      "none of the above"
    ],
    "number": 3,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "В JavaScript значение NaN (Not-a-Number) считается числом, несмотря на его название. Поэтому typeof NaN возвращает 'number'."
  },

  {
    "body": "Что выведет этот код?\nlet s = \"00000001111111\";\nlet l = 0, r = s.length - 1, ans = -1;\nwhile(l <= r) {\n   var mid = Math.floor((l + r) / 2);\n   if(s[mid] == '1') {\n       ans = mid;\n       r = mid - 1;\n   }\n   else {\n       l = mid + 1;\n   }\n}\nprint(ans);",
    "answers": [
      "8",
      "7",
      "0",
      "1"
    ],
    "number": 4,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Данный код ищет первый элемент '1' в строке, используя бинарный поиск. Ответом будет индекс 7, так как первый '1' встречается в этом месте."
  },

  {
    "body": "Что выведет этот код?\nlet s = \"00000001111111\";\nlet l = 0, r = s.length - 1, ans = -1;\nwhile(l <= r) {\n   var mid = Math.floor((l + r) / 2);\n   if(s[mid] == '1') {\n       ans = mid;\n       r = mid - 1;\n   }\n   else {\n       l = mid + 1;\n   }\n}\nprint(ans);",
    "answers": [
      "8",
      "7",
      "0",
      "1"
    ],
    "number": 5,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Это тот же код, что и в предыдущем вопросе, и результат будет такой же: индекс первого вхождения '1' — 7."
  },

  {
    "body": "Что выведет этот код?\nconst example = ({ a, b, c }) => {\n console.log(a, b, c);\n};\nexample(0, 1, 2);",
    "answers": [
      "0 1 2",
      "0 undefined undefined",
      "undefined undefined undefined",
      "none of the above"
    ],
    "number": 6,
    "isCorrect": [ 0, 0, 1, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "В JavaScript параметры функции, определённые как { a, b, c }, ожидают объект. При вызове функции с обычными аргументами (0, 1, 2) результатом будет undefined для каждого из параметров."
  },

  {
    "body": "Что выведет этот код?\nfunction solve(arr, rotations){\n if(rotations == 0) return arr;\n for(let i = 0; i < rotations; i++){\n   let element = arr.pop();\n   arr.unshift(element);\n }\n return arr;\n}\n// solve([44, 1, 22, 111], 5);",
    "answers": [
      "[111,44,1,22]",
      "[44,1,22,111]",
      "[1,22,111,44]",
      "[22,111,44,1]"
    ],
    "number": 7,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "При 5 поворотах (попытках перемещения последнего элемента в начало) массив [44, 1, 22, 111] преобразуется в [111, 44, 1, 22]."
  },

  {
    "body": "Что выведет этот код?\nvar a = Math.max();\nvar b = Math.min();\nprint(a);\nprint(b);",
    "answers": [
      "-infinity infinity",
      "-infinity -infinity",
      "-infinity infinity",
      "-infinity -infinity"
    ],
    "number": 8,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Функции Math.max() и Math.min() без аргументов возвращают -Infinity и Infinity соответственно."
  },

  {
    "body": "Что выведет этот код?\nconst set = new Set();\nset.add(5);\nset.add('Hello');\nset.add({ name: 'Scaler' });\nfor (let item of set) {\n console.log(item + 6);\n}",
    "answers": [
      "11 NaN NaN",
      "11 NaN [object Object]",
      "11 Hello6 [object Object]6",
      "None of the above"
    ],
    "number": 9,
    "isCorrect": [ 0, 0, 1, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "При сложении с числом, строка 'Hello' станет 'Hello6', а объект будет приведён к строке '[object Object]'."
  },

  {
    "body": "Что выведет этот код?\nvar a = \"hello\";\nvar sum = 0;\nfor(var i = 0; i < a.length; i++) {\n   sum += (a[i] - 'a');\n}\nprint(sum);",
    "answers": [
      "47",
      "NaN",
      "0",
      "None of the above"
    ],
    "number": 10,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Попытка вычесть символ 'a' из каждого символа строки приведет к NaN, так как вычитание строк из символов не имеет смысла."
  },

  {
    "body": "Что выведет этот код?\nfunction test(...args) {\n console.log(typeof args);\n}\ntest(12);",
    "answers": [
      "NaN",
      "Number",
      "Object",
      "Array"
    ],
    "number": 11,
    "isCorrect": [ 0, 0, 1, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Оператор 'typeof' возвращает 'object' для объектов, а 'args' — это массив аргументов функции, который является объектом."
  },

  {
    "body": "Что выведет этот код?\nvar a = true + true + true * 3;\nprint(a);",
    "answers": [
      "3",
      "0",
      "Error",
      "5"
    ],
    "number": 12,
    "isCorrect": [ 0, 0, 0, 1 ] ,
    "countOfAnswers": 4,
    "explanation": "В JavaScript оператор '*' имеет больший приоритет, чем '+'. Сначала выполняется умножение (true * 3 = 3), затем сложение (true + true + 3 = 5)."
  },

  {
    "body": "Что выведет этот код?\na = [1, 2, 3, 4, 5];\nprint(a.slice(2, 4));",
    "answers": [
      "3,4",
      "2,3",
      "3,4,5",
      "2,3,4"
    ],
    "number": 13,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Метод 'slice' возвращает подмассив с элементами с индекса 2 по 3, не включая индекс 4. Ответом будет [3, 4]."
  },

  {
    "body": "Что выведет этот код?\nvar a = 1;\nvar b = 0;\nwhile (a <= 3) {\n   a++;\n   b += a * 2;\n   print(b);\n}",
    "answers": [
      "4 10 18",
      "1 2 3",
      "1 4 7",
      "None of the above"
    ],
    "number": 14,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Каждый шаг цикла увеличивает 'a' и добавляет к 'b' удвоенное значение 'a'. После трех итераций значения b будут: 4, 10, 18."
  },

  {
    "body": "Что выведет этот код?\n(function(){\n setTimeout(()=> console.log(1),2000);\n console.log(2);\n setTimeout(()=> console.log(3),0);\n console.log(4);\n})();",
    "answers": [
      "1 2 3 4",
      "2 3 4 1",
      "2 4 3 1",
      "4 3 1 2"
    ],
    "number": 15,
    "isCorrect": [ 0, 0, 1, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "setTimeout с задержкой 0 выполняется после выполнения основного кода, так что сначала выводится 2 и 4, затем 3 и 1 (после задержки)."
  },

  {
    "body": "Что выведет этот код?\n<script type=\"text/javascript\" language=\"javascript\"\nvar a = \"Scaler\";\nvar result = a.substring(2, 4);\ndocument.write(result);\n</script>",
    "answers": [
      "al",
      "ale",
      "cal",
      "caler"
    ],
    "number": 16,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Метод substring извлекает часть строки начиная с индекса 2 и заканчивая индексом 4 (не включая его). Ответ будет 'al'."
  },

  {
    "body": "Когда значение оператора равно NULL,\nунарный оператор typeof вернет...",
    "answers": [
      "Boolean",
      "Undefined",
      "Object",
      "Integer"
    ],
    "number": 17,
    "isCorrect": [ 0, 0, 1, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "В JavaScript значение 'null' считается объектом, несмотря на его название. Поэтому typeof null возвращает 'object'."
  },

  {
    "body": "When the switch statement matches the expression with the given labels,\nhow is the comparison done?",
    "answers": [
      "Both the datatype and the result of the expression are compared",
      "Only the datatype of the expression is compared",
      "Only the value of the expression is compared",
      "None of the above"
    ],
    "number": 18,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "В операторе switch сравниваются и значение выражения, и его тип. Это строгое сравнение (похожее на использование ===)."
  },

  {
    "body": "Which function is used to serialize an object into a JSON string in JavaScript?",
    "answers": [
      "stringify()",
      "parse()",
      "convert()",
      "None of the above"
    ],
    "number": 19,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Для сериализации объекта в строку JSON используется метод JSON.stringify()."
  },

  {
    "body": "У какого объекта нет прототипа?",
    "answers": [
      "Base object",
      "All objects have a prototype",
      "None of the objects have a prototype",
      "None of the above"
    ],
    "number": 20,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "В JavaScript объект Object.prototype является базовым прототипом для всех объектов, за исключением самого Object, который не имеет прототипа."
  },

  {
    "body": "Which of the following are closures in JavaScript?",
    "answers": [
      "Variables",
      "Functions",
      "Objects",
      "All of the above"
    ],
    "number": 21,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Closures в JavaScript — это функции, которые могут «захватывать» переменные из окружающего контекста. Таким образом, функции являются замыканиями, а не переменные или объекты."
  },

  {
    "body": "What does the following JavaScript code output?\nconsole.log(10 == '10');",
    "answers": [
      "true",
      "false",
      "SyntaxError",
      "TypeError"
    ],
    "number": 22,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Оператор '==' выполняет преобразование типов перед сравнением, поэтому строка '10' приводится к числу 10, и результатом будет true."
  },

  {
    "body": "What does the following JavaScript function return?\nfunction checkBoolean() {\n  var x = true;\n  var y = false;\n  return x && y;\n}",
    "answers": [
      "true",
      "false",
      "undefined",
      "null"
    ],
    "number": 23,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Оператор '&&' возвращает 'true' только если оба операнда истинны. Поскольку y = false, результат будет false."
  },

  {
    "body": "Что выведет этот код?\nlet x = 5;\nlet y = 2;\nconsole.log(x % y);",
    "answers": [
      "2.5",
      "1",
      "2",
      "0"
    ],
    "number": 24,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Оператор '%' возвращает остаток от деления. 5 % 2 = 1."
  },

  {
    "body": "Что выведет этот код?\nconsole.log(typeof undefined);",
    "answers": [
      "'undefined'",
      "'object'",
      "'null'",
      "'NaN'"
    ],
    "number": 25,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Тип значения 'undefined' всегда возвращает строку 'undefined'."
  },

  {
    "body": "Что выведет этот код?\nconsole.log(\"5\" + 1);",
    "answers": [
      "6",
      "'51'",
      "'5undefined'",
      "TypeError"
    ],
    "number": 26,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Когда строка объединяется с числом с помощью оператора '+', число преобразуется в строку, и результатом будет строка '51'."
  },

  {
    "body": "Что выведет этот код?\nconsole.log(\"five\" * 2);",
    "answers": [
      "10",
      "NaN",
      "TypeError",
      "'fivefive'"
    ],
    "number": 27,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Попытка умножить строку на число приводит к ошибке, так как строка 'five' не может быть преобразована в число, результат будет NaN."
  },

  {
    "body": "Что выведет этот код?\nfunction compareNumbers() {\n  return 10 > 9;\n}",
    "answers": [
      "true",
      "false",
      "'10'",
      "'9'"
    ],
    "number": 28,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Условие 10 > 9 возвращает true, так как 10 больше 9."
  },

  {
    "body": "Что выведет этот код?\nfunction testArray() {\n  var arr = [1, 2, 3];\n  return arr[0];\n}",
    "answers": [
      "1",
      "2",
      "3",
      "'undefined'"
    ],
    "number": 29,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Массив arr имеет элементы 1, 2, 3. Индекс 0 соответствует элементу 1."
  },

  {
    "body": "Что выведет этот код?\nconsole.log(typeof null);",
    "answers": [
      "'object'",
      "'null'",
      "'undefined'",
      "'NaN'"
    ],
    "number": 30,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "В JavaScript значение 'null' возвращает тип 'object', что является известной ошибкой в языке."
  },

  {
    "body": "Что выведет этот код?\nfunction multiply(a, b) {\n  return a * b;\n}\nconsole.log(multiply(5, 3));",
    "answers": [
      "15",
      "8",
      "'53'",
      "undefined"
    ],
    "number": 31,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Функция умножает два числа, 5 * 3 = 15."
  },

  {
    "body": "Что выведет этот код?\nconst arr = ['apple', 'banana', 'cherry'];\nconsole.log(arr.length);",
    "answers": [
      "3",
      "'apple'",
      "undefined",
      "TypeError"
    ],
    "number": 32,
    "isCorrect": [ 1, 0, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Массив содержит три элемента, поэтому его длина равна 3."
  },

  {
    "body": "Что выведет этот код?\nconsole.log(0.1 + 0.2 === 0.3);",
    "answers": [
      "true",
      "false",
      "TypeError",
      "undefined"
    ],
    "number": 33,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Из-за особенностей представления чисел с плавающей запятой в JavaScript, результат 0.1 + 0.2 не точно равен 0.3, поэтому выражение возвращает false."
  },

  {
    "body": "Что выведет этот код?\nlet x = \"10\";\nlet y = \"5\";\nconsole.log(x + y);",
    "answers": [
      "15",
      "'105'",
      "'10undefined'",
      "TypeError"
    ],
    "number": 34,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Оператор '+' при применении к строкам выполняет их конкатенацию, поэтому результатом будет строка '105'."
  },

  {
    "body": "Что выведет этот код?\nconsole.log(\"Hello World\".charAt(6));",
    "answers": [
      "W",
      "w",
      "H",
      "undefined"
    ],
    "number": 35,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Метод charAt возвращает символ на указанной позиции, в данном случае на позиции 6 находится символ 'W'."
  },

  {
    "body": "Что выведет этот код?\nconsole.log(\"2\" + 2);",
    "answers": [
      "4",
      "'22'",
      "'2undefined'",
      "TypeError"
    ],
    "number": 36,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Оператор '+' при применении к строке и числу преобразует число в строку и выполняет конкатенацию. Результатом будет строка '22'."
  },

  {
    "body": "Что выведет этот код?\nlet a = true;\nlet b = false;\nconsole.log(a && b);",
    "answers": [
      "true",
      "false",
      "undefined",
      "null"
    ],
    "number": 37,
    "isCorrect": [ 0, 1, 0, 0 ] ,
    "countOfAnswers": 4,
    "explanation": "Оператор '&&' возвращает true только если оба операнда истинны. Поскольку b = false, результат будет false."
  }

]
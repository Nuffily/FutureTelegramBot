{
  "theory": [
    {
      "command": "/introduction_to_javascript",
      "title": "Введение в JavaScript",
      "sections": [
        {
          "number": 1,
          "title": "Что такое JavaScript?",
          "content": "JavaScript — это высокоуровневый, интерпретируемый скриптовый язык программирования. Он является одним из трёх основных технологических компонентов веба наряду с HTML и CSS и используется для создания интерактивных веб-сайтов. JavaScript позволяет добавлять интерактивные элементы на страницы, такие как анимации, обработка форм, изменение стилей элементов и многое другое.\n\nJavaScript также используется для серверного программирования с помощью Node.js, разработки мобильных приложений, игр, и даже управления базами данных. Этот язык поддерживает различные стили программирования: императивный, объектно-ориентированный и функциональный, что делает его очень гибким и популярным среди разработчиков.\n"
        },
        {
          "number": 2,
          "title": "История JavaScript",
          "content": "JavaScript был создан в 1995 году Бренданом Эйхом в компании Netscape Communications. Первоначально язык назывался Mocha, затем был переименован в LiveScript, и в конце концов получил имя JavaScript. Это было сделано для того, чтобы ассоциировать язык с популярным тогда языком программирования Java, хотя между этими языками мало общего.\n\nJavaScript быстро стал популярным среди разработчиков благодаря своей интеграции в браузеры, что позволяло создавать более интерактивные веб-сайты. В 1997 году язык был стандартизирован под названием ECMAScript, чтобы обеспечить его совместимость между различными браузерами. С тех пор стандарт ECMAScript продолжает развиваться и обновляться.\n\n"
        },
        {
          "number": 3,
          "title": "Зачем нужен JavaScript?",
          "content": "JavaScript необходим для создания динамичных и интерактивных веб-сайтов. Без JavaScript веб-страницы были бы статичными, ограничиваясь только отображением информации без возможности взаимодействия с пользователем. С помощью JavaScript можно управлять DOM (Document Object Model), что позволяет динамически изменять содержимое и структуру веб-страниц.\n\nКроме того, JavaScript играет ключевую роль в разработке одностраничных приложений (SPA), где вся логика приложения (включая загрузку новых данных) обрабатывается на клиентской стороне. Это обеспечивает быструю отзывчивость интерфейса без необходимости перезагружать страницу.\n\nJavaScript также используется для создания серверных приложений (Node.js), разработки мобильных приложений (React Native), создания игр и многих других видов программного обеспечения, что делает его универсальным инструментом в арсенале современного разработчика.\n"
        }
      ]
    },
    {
      "command": "/basic_syntax",
      "title": "Основы синтаксиса",
      "sections": [
        {
          "number": 1,
          "title": "Структура кода",
          "content": "Структура кода в JavaScript организуется с помощью выражений, операторов, блоков кода и функций.\n\nВыражения — это единицы кода, которые могут быть оценены и приведены к некоторому значению. Например, 5 * 10 — это выражение, результатом которого является 50.\nОператоры — это конструкции, которые можно применять к значениям для выполнения определенной операции, например, операторы +, -, *, / для арифметических операций.\nБлоки кода начинаются и заканчиваются фигурными скобками {} и позволяют группировать несколько инструкций в одну единицу, которую можно использовать в управляющих структурах, таких как условные операторы и циклы.\nФункции — это блоки кода, предназначенные для выполнения определенной задачи. Функция объявляется с помощью ключевого слова function, за которым следует название, список параметров в круглых скобках и тело функции в фигурных скобках.\n"
        },
        {
          "number": 2,
          "title": "Переменные",
          "content": "Переменные в JavaScript используются для хранения данных, которые могут быть изменены во время выполнения программы. Для объявления переменных могут использоваться ключевые слова var, let и const.\n\nvar — используется для объявления переменной с областью видимости в рамках функции или глобально, если объявление происходит вне функции.\nlet — позволяет объявить переменную с областью видимости в рамках блока {}.\nconst — используется для объявления переменных, значение которых не предполагается изменять. Область видимости также ограничена блоком.\nПримеры объявления переменных:\n\njavascript\nКопировать код\nlet age = 25; // Объявление переменной с помощью let\nconst name = \"Мария\"; // Объявление константы\nvar color = \"синий\"; // Объявление переменной с помощью var\n"
        },
        {
          "number": 3,
          "title": "Условные операторы",
          "content": "Условные операторы используются для выполнения действий в зависимости от условия. Условные операторы используются для выполнения различных частей кода в зависимости от того, истинно ли определенное условие.\n\nif — самый базовый условный оператор. Если условие истинно, выполняется блок кода.\nelse — этот блок выполняется, если условие в соответствующем if ложно.\nelse if — позволяет проверить несколько условий последовательно.\nswitch — этот оператор используется для выполнения разных блоков кода на основе определенного значения переменной.\nПример использования условных операторов:\n\njavascript\nКопировать код\nlet score = 75;\n\nif (score >= 90) {\n    console.log(\"Отлично!\");\n} else if (score >= 70) {\n    console.log(\"Хорошо!\");\n} else {\n    console.log(\"Необходимо подтянуть знания.\");\n}"
        }
      ]
    }
  ]
}

import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import com.fasterxml.jackson.databind.ObjectMapper;import static org.junit.jupiter.api.Assertions.*;public class StatisticsTest {    QuestionStatistics statistics = new QuestionStatistics();    @BeforeEach    public void init() {        statistics.setQuestionPassed(new boolean[]{false, false, false, false});        statistics.setQuestionsAttempts(new int[]{0, 0, 0, 0});        statistics.setCountOfPassedQuestions(0);        statistics.setCountOfAttemptedQuestions(0);    }    @Test    public void testUpdateStatsRightAnswer() {        boolean rightAnswer = true;        int numberOfQuestion = 1;        statistics.updateStats(1, rightAnswer);        assertTrue(statistics.getQuestionPassed()[numberOfQuestion]);        assertEquals(1, statistics.getCountOfAttemptedQuestions());        assertEquals(1, statistics.getCountOfPassedQuestions());        assertEquals(1, statistics.getQuestionsAttempts()[numberOfQuestion]);    }    @Test    public void testUpdateStatsWrongAnswer() {        boolean wrongAnswer = false;        int numberOfQuestion = 1;        statistics.updateStats(1, wrongAnswer);        assertFalse(statistics.getQuestionPassed()[numberOfQuestion]);        assertEquals(1, statistics.getCountOfAttemptedQuestions());        assertEquals(0, statistics.getCountOfPassedQuestions() );        assertEquals(1, statistics.getQuestionsAttempts()[numberOfQuestion]);    }    @Test    public void testSaveStats() {        String testPath = "test.json";        statistics.saveStats(testPath);        assertTrue(Files.exists(Path.of(testPath)));        try {            String testContent = new String(Files.readAllBytes(Path.of(testPath)));            ObjectMapper objectMapper = new ObjectMapper();            objectMapper.readTree(testContent);        } catch (IOException e) {            fail("Содержимое файла не является валидным JSON: " + e.getMessage());        } finally {            try {                Files.delete(Path.of(testPath));            } catch (IOException e) {                e.printStackTrace();            }        }    }}